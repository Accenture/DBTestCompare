# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
    dBTestCompareVersion: '1.4'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '((Get-Content -path ./pom.xml -Raw) -replace ''<version>\d\.\d-SNAPSHOT<\/version>'',''<version>$(dBTestCompareVersion)-SNAPSHOT</version>'') | Set-Content -Path ./pom.xml'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      curl -OutFile "sqljdbc_8.2.0.0_enu.zip" "https://download.microsoft.com/download/4/0/8/40815588-bef6-4715-bde9-baace8726c2a/sqljdbc_8.2.0.0_enu.zip"
      Expand-Archive -LiteralPath 'sqljdbc_8.2.0.0_enu.zip' -DestinationPath "./sqljdbc" -Force
      Copy-Item -Path "./sqljdbc/sqljdbc_8.2/enu/*"  -Destination "./jdbc_drivers" -Include "mssql-jdbc-*.jar"
      
      curl -OutFile  "sql-scripts.zip" "https://github.com/raczeja/DBTestCompare_backups/raw/master/my-mysql/sql-scripts/sql-scripts.zip"
      Expand-Archive -LiteralPath 'sql-scripts.zip' -DestinationPath "./docker/my-mysql/sql-scripts" -Force
      
      curl -OutFile  "sql-scripts.zip" "https://github.com/raczeja/DBTestCompare_backups/raw/master/my-postgres/sql-scripts/sql-scripts.zip"
      Expand-Archive -LiteralPath 'sql-scripts.zip' -DestinationPath "./docker/my-postgres/sql-scripts" -Force
      
      curl -OutFile "AdventureWorks2008R2FullDatabaseBackup.zip" "https://github.com/raczeja/DBTestCompare_backups/raw/master/AdventureWorks2008R2FullDatabaseBackup.zip"
      Expand-Archive -LiteralPath 'AdventureWorks2008R2FullDatabaseBackup.zip' -DestinationPath ./docker -Force

- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up -d'

- task: PowerShell@2
  inputs:
    filePath: './restoreBackup.ps1'

- task: Ant@1
  inputs:
    buildFile: './deploy/build.xml'
    options: 
    targets: 'compile tokens.copy.files testdbq.run'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'

- task: PowerShell@2
  inputs:
    filePath: './zipArtifact.ps1'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: './DBTestCompare$(dBTestCompareVersion).zip'
    artifact: 'JAR'
    publishLocation: 'pipeline'
