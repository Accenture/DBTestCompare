# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    include:
    - '*'

pool:
  vmImage: 'ubuntu-latest'

variables:
    dBTestCompareVersion: '1.4'

steps:

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: '((Get-Content -path ./pom.xml -Raw) -replace ''<version>\d\.\d-SNAPSHOT<\/version>'',''<version>$(dBTestCompareVersion)-SNAPSHOT</version>'') | Set-Content -Path ./pom.xml'

- task: PowerShell@2
  inputs:
    filePath: './downloadBackupAndJDBCDrivers.ps1'

- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Container Registry'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
    dockerComposeCommand: 'up -d'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      docker ps -a
      docker exec -it sqlserver-container mkdir /var/opt/mssql/backup
      docker cp ./docker/"AdventureWorks2008R2FullDatabaseBackup.bak" sqlserver-container:/var/opt/mssql/backup
      docker exec -it sqlserver-container /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P "yourStrong(!)Password" -Q "RESTORE DATABASE AdventureWorks2008R2 FROM DISK = '/var/opt/mssql/backup/AdventureWorks2008R2FullDatabaseBackup.bak' WITH MOVE 'AdventureWorks2008R2_Data' TO '/var/opt/mssql/data/AdventureWorks2008R2.mdf', MOVE 'AdventureWorks2008R2_Log' TO '/var/opt/mssql/data/AdventureWorks2008R2_1.LDF'"

- task: Ant@1
  inputs:
    buildFile: './deploy/build.xml'
    options: 
    targets: 'compile tokens.copy.files testdbq.run'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    javaHomeOption: 'JDKVersion'

- task: PowerShell@2
  inputs:
    filePath: './zipArtifact.ps1'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: './DBTestCompare$(dBTestCompareVersion).zip'
    artifact: 'JAR'
    publishLocation: 'pipeline'
